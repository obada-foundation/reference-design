version: "3.8"

services:
  traefik:
    image: traefik:v2.6.6
    container_name: traefik
    restart: always
    volumes:
      - ./traefik/acme.json:/acme.json
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - frontend
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`t.{{ domain }}`)
      - traefik.http.routers.api.entrypoints=https
      - traefik.http.routers.api.tls=true
      - traefik.http.routers.api.tls.certresolver=letsencrypt
      - traefik.http.routers.api.service=api@internal
    ports:
      - "80:80"
      - "443:443"
    command:
      - '--api'
      - '--api.dashboard=false'
      - '--providers.docker=true'
      - '--providers.docker.exposedByDefault=false'
      - '--providers.docker.network=frontend'
      - '--entrypoints.http=true'
      - '--entrypoints.http.address=:80'
      - '--entrypoints.http.http.redirections.entrypoint.to=https'
      - '--entrypoints.http.http.redirections.entrypoint.scheme=https'
      - '--entrypoints.https=true'
      - '--entrypoints.https.address=:443'
      - '--certificatesResolvers.letsencrypt.acme.email={{ acme_email }}'
      - '--certificatesResolvers.letsencrypt.acme.storage=acme.json'
      - '--certificatesResolvers.letsencrypt.acme.httpChallenge.entryPoint=http'
      - '--log=true'
      - '--log.level=DEBUG'

  app:
    image: {{ rd_docker_image }}
    container_name: reference-design
    volumes:
      - ./etc/.env:/app/.env
{% if filesystem_driver=='local' %}
      - documents:/app/storage/app/documents
{% endif %}
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.routers.rd.rule=Host(`{{ domain }}`)
      - traefik.http.middlewares.rd.ratelimit.average=60
      - traefik.http.middlewares.rd.ratelimit.period=1m
      - traefik.http.routers.rd.entrypoints=https
      - traefik.http.routers.rd.tls.certresolver=letsencrypt
      - traefik.http.routers.rd.service=rd-service
      - traefik.http.services.rd-service.loadbalancer.server.port=80
    depends_on:
      - traefik
      - db
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
    networks:
      - backend
      - frontend

  client-helper:
    image: obada/client-helper:develop
    container_name: client-helper
    restart: always
    user: ${UID}:${GID}
    volumes:
      - ./client-helper/data:/home/obada/data
      - ./client-helper/keys:/home/obada/keys
    environment:
      - DB_PATH=/home/obada/data
      - IPFS_RPC_URL=ipfs:5001
      - NODE_RPC_URL={{ node_rpc }}
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
    networks:
      - backend

  ipfs:
    image: ipfs/go-ipfs:latest
    container_name: ipfs
    restart: always
    volumes:
      - ./ipfs/export:/export
      - ./ipfs/data:/data/ipfs
    ports:
      - "4001:4001"
      - "4002:4001/udp" 
      - "8080:8080"
      - "127.0.0.1:5001:5001"
    networks:
      - frontend
      - backend

  db:
    image: mysql:8
    container_name: db
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD={{ mysql_password }}
      - MYSQL_DATABASE=reference-design
    ports:
      - 127.0.0.1:3306:3306
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: "mysql -uroot -p{{ mysql_password }} -e 'SELECT 1' reference-design"
      interval: 1s
      timeout: 3s
      retries: 6
    networks:
      - backend

networks:
  backend:
  frontend:
    name: frontend

volumes:
  db_data: {}
{% if filesystem_driver=='local' %}
  documents: {}
{% endif %}
